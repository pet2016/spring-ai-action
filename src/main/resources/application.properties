spring.application.name=springaiaction


server.port=0
spring.ai.vectorstore.qdrant.initialize-schema=true
spring.ai.vectorstore.qdrant.collection-name=GameRules

spring.ai.openai.api-key="${OPENAI_API_KEY}"

spring.cloud.function.definition=fileSupplier|documentReader|splitter|titleDeterminer|vectorStoreConsumer

file.supplier.directory="/Users/a123/Documents/ragfile"
file.supplier.filename-regex=.*\.(pdf|docx|txt)

services.qdrant.image='qdrant/qdrant:latest'
services.qdrant.ports=['6334:6334']

spring.ai.mcp.client.stdio.connections.boardgamedb.command=${JAVA_HOME}/bin/java
spring.ai.mcp.client.stdio.servers-configuration=classpath:mcp-servers.json
spring.ai.mcp.client.stdio.connections.boardgamedb.args="-jar","${MCP_SERVER_PATH}/build/libs/mcp-server-0.0.1-SNAPSHOT.jar"
spring.ai.mcp.client.toolcallback.enable=true


# \u6587\u751F\u56FE/\u97F3\u9891
spring.ai.openai.chat.enabled=false
spring.ai.openai.embedding.enabled=false

spring.servlet.multipart.max-file-size=10MB

#\u6587\u751Fimage
spring.ai.openai.image.enabled=false
spring.ai.openai.image.options.height=1024
spring.ai.openai.image.options.width=1024
spring.ai.openai.image.options.style=natural
spring.ai.openai.image.options.quality=hd

#\u89C2\u6D4B
management.endpoints.web.exposure.include=health,metrics,prometheus

management.tracing.sampling.probability=1.0
